// <auto-generated />
using System;
using DesafioTecnico.Infraestructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DesafioTecnico.Infraestructure.Data.Migrations
{
    [DbContext(typeof(DesafioTecnicoContext))]
    [Migration("20180617235632_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DesafioTecnico.Domain.Models.Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(70);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("JobOpportunityId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.HasIndex("JobOpportunityId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("DesafioTecnico.Domain.Models.CandidateTecnology", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CandidateId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("TecnologyId");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("TecnologyId");

                    b.ToTable("CandidateTecnologies");
                });

            modelBuilder.Entity("DesafioTecnico.Domain.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(70);

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(18);

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("DesafioTecnico.Domain.Models.CompanyTecnology", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CompanyId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("TecnologyId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("TecnologyId");

                    b.ToTable("CompanyTecnologies");
                });

            modelBuilder.Entity("DesafioTecnico.Domain.Models.JobOpportunity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CompanyId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("JobOpportunities");
                });

            modelBuilder.Entity("DesafioTecnico.Domain.Models.JobOpportunityTecnology", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid?>("JobOpportunityId");

                    b.Property<Guid?>("TecnologyId");

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("JobOpportunityId");

                    b.HasIndex("TecnologyId");

                    b.ToTable("JobOpportunityTecnologies");
                });

            modelBuilder.Entity("DesafioTecnico.Domain.Models.Tecnology", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("Tecnologies");
                });

            modelBuilder.Entity("DesafioTecnico.Domain.Models.Candidate", b =>
                {
                    b.HasOne("DesafioTecnico.Domain.Models.JobOpportunity", "JobOpportunity")
                        .WithMany("Candidates")
                        .HasForeignKey("JobOpportunityId");
                });

            modelBuilder.Entity("DesafioTecnico.Domain.Models.CandidateTecnology", b =>
                {
                    b.HasOne("DesafioTecnico.Domain.Models.Candidate", "Candidate")
                        .WithMany("Tecnologies")
                        .HasForeignKey("CandidateId");

                    b.HasOne("DesafioTecnico.Domain.Models.Tecnology", "Tecnology")
                        .WithMany()
                        .HasForeignKey("TecnologyId");
                });

            modelBuilder.Entity("DesafioTecnico.Domain.Models.CompanyTecnology", b =>
                {
                    b.HasOne("DesafioTecnico.Domain.Models.Company", "Company")
                        .WithMany("Tecnologies")
                        .HasForeignKey("CompanyId");

                    b.HasOne("DesafioTecnico.Domain.Models.Tecnology", "Tecnology")
                        .WithMany()
                        .HasForeignKey("TecnologyId");
                });

            modelBuilder.Entity("DesafioTecnico.Domain.Models.JobOpportunity", b =>
                {
                    b.HasOne("DesafioTecnico.Domain.Models.Company", "Company")
                        .WithMany("JobOpportunities")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("DesafioTecnico.Domain.Models.JobOpportunityTecnology", b =>
                {
                    b.HasOne("DesafioTecnico.Domain.Models.JobOpportunity", "JobOpportunity")
                        .WithMany("Tecnologies")
                        .HasForeignKey("JobOpportunityId");

                    b.HasOne("DesafioTecnico.Domain.Models.Tecnology", "Tecnology")
                        .WithMany()
                        .HasForeignKey("TecnologyId");
                });
#pragma warning restore 612, 618
        }
    }
}
